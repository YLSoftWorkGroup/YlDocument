(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{146:function(t,n,s){"use strict";s.r(n);var e=s(0),a=Object(e.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"服务端开发规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务端开发规范"}},[t._v("#")]),t._v(" 服务端开发规范")]),t._v(" "),s("h4",{attrs:{id:"命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),s("h5",{attrs:{id:"数据库命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库命名规范"}},[t._v("#")]),t._v(" 数据库命名规范")]),t._v(" "),s("ol",[s("li",[t._v("表命名规范")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  示例： g_table_name  \n  g_  全局公共表名称\n  c_  常用库表名称\n  q_  实物量管控表名称\n  m_  账务管控表名称\n  t_  周转材料表名称\n  temp_  中间缓存表名称\n\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("列名称规范")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n\n继承列（所有表具有）\nid     主键  \ncreator_id 添加人主键\ncreator_name 添加人\ncreated_at 添加时间\nmodifier_id 修改人主键\nmodifier_name 修改人\nupdated_at 修改时间\nis_removed 是否删除\nversion 版本号\n\n按需使用\nsort_code 排序\nis_active 状态\nis_static 是否静态\norg_id  组织机构主键 （业务表具有）\norder_id 主表主键 （主从明细表具有）\n\n树形表具有\nparent_id 父节点主键\nfull_id 节点主键链\nfull_name 节点名称链\nlevel 层级\nis_leaf 子节点\n\n材料信息相关列\nmaterial_id 材料唯一标识\nmaterial_name 材料名称\nmaterial_model 规格型号\nmaterial_unit 单位名称\nclass_id 类别主键\nclass_full_id 类别主键链\n\n数量、单价、金额相关列\ntaxRate: { type: Sequelize.DECIMAL(28, 4) }, // 税率\ntaxFreePrice: { type: Sequelize.DECIMAL(28, 8) }, // 不含税单价\ntaxFreeSum: { type: Sequelize.DECIMAL(28, 4) }, // 不含税金额\ntaxIncludedPrice: { type: Sequelize.DECIMAL(28, 8) }, // 含税单价\ntaxIncludedSum: { type: Sequelize.DECIMAL(28, 4) }, // 含税金额\ntaxAmount: { type: Sequelize.DECIMAL(28, 4) }, // 税额\nbookPrice: { type: Sequelize.DECIMAL(28, 8) }, // 账面价\nbookSum: { type: Sequelize.DECIMAL(28, 4) }, // 账面金额\ndifference: { type: Sequelize.DECIMAL(28, 4) }, // 差额\n\n对接列\nori_org_id 对接第三方组织主键\nori_class_id 对接第三方材料类别主键\nori_material_id 对接第三方材料信息主键\nori_supplier_id 对接第三方供应商主键\nori_labour_id 对接第三方用料单位主键\nori_gh_id 对接第三方工号主键\nori_order_id 对接第三方单据主键\n\n双主键的话，orgId创建表的时候必须当道第一列\n如:\ncreate table if not exists m_gh_plan\n(                       \n    org_id                                BIGINT                          NOT NULL     COMMENT '组织机构主键', \n    id                                    BIGINT                          NOT NULL     COMMENT '主键id',      org_name                              STRING                                       COMMENT '组织机构名称'\n...\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("脚本语法规范")]),t._v(" "),s("p",[t._v("脚本都按小写命名")]),t._v(" "),s("p",[t._v("脚本: 1、查询语句尽量不要出现复杂的计算语句影响性能问题。\n2、查询语句的时候先缩小查询范围，在进行关联查询。")]),t._v(" "),s("p",[t._v("使用事务注意事项：\n1、使用事物的时候内部不要写逻辑的，会影响性能问题，尽量在事务外部处理。\n2、事务内部尽量不要出现查询的语句。\n3、事务内部尽量不要出现for循环语句。")])])]),t._v(" "),s("h5",{attrs:{id:"服务端规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务端规范"}},[t._v("#")]),t._v(" 服务端规范")]),t._v(" "),s("ol",[s("li",[t._v("文件名命名")])]),t._v(" "),s("p",[t._v("model 层")]),t._v(" "),s("p",[t._v("基于数据库表名称 "),s("code",[t._v("_")]),t._v(" 替换为 "),s("code",[t._v("-")])]),t._v(" "),s("blockquote",[s("p",[t._v("示例：c_gh => c-gh.js")])]),t._v(" "),s("p",[t._v("service 层")]),t._v(" "),s("p",[t._v("基于数据库表名称 "),s("code",[t._v("_")]),t._v(" 替换为 "),s("code",[t._v("-")]),t._v(" +"),s("code",[t._v("-service")])]),t._v(" "),s("blockquote",[s("p",[t._v("示例：c_gh => c-gh-service.js")])]),t._v(" "),s("p",[t._v("router 层")]),t._v(" "),s("p",[t._v("如果api数量过大建议分多个路由文件")]),t._v(" "),s("p",[t._v("命名规则基于数据库表名称 "),s("code",[t._v("_")]),t._v(" 替换为 "),s("code",[t._v("-")]),t._v(" +"),s("code",[t._v("-route")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("函数命名")])]),t._v(" "),s("p",[t._v("规则：小驼峰")]),t._v(" "),s("blockquote",[s("p",[t._v("示例 getUserName()")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("变量名称")])]),t._v(" "),s("p",[t._v("规则：小驼峰")]),t._v(" "),s("blockquote",[s("p",[t._v("示例  userName")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("api命名规范")])]),t._v(" "),s("p",[t._v("api路径全小写")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据指定条件获取列表")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items/:id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据ID获取单条信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items/:id/:orgid'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据双主键获取单条信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items-params'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据条件获取列表信息 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items-bulking'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//增量获取数据  参数说明 limit: 15,  //增量获取的条目数 缺省时默认值为200 orgId: 123, //组织机构ID  version: 123")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加单条数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items-bulking'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加多条数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items/:id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改单条信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items/:id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除单条信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items/:id/:orgid'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除单条信息")]),t._v("\n\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("服务层命名")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  queryItems 根据指定条件获取列表\n  getItem 根据ID获取单条信息\n  queryItemsParams 根据条件获取列表信息\n  queryItemsBulking 增量获取数据 \n  \n  createItem 添加单条数据\n  createItems 添加多条数据\n  updateItem 修改单条信息\n  deleteItem 删除单条信息\n\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("服务层代码规范\n复杂业务逻辑写上说明\n如： 提交收料单：\n1、动态表是否已经结转了，结转返回，没有继续\n2、获取发料单查看是否已经提交，提交了返回，未提交继续\n3、获取材料详情查看是否有发料，有发料返回所有发料单，没有继续\n4、处理库存\n5、修改收料单提交状态。\nmodel 层字段必须写上说明，没有使用字段需要列出来，枚举类型的一定写上代表的意思。\n如：serviceType: { type: Sequelize.INTEGER }, // 业务类型（新增） 调入（20） 收料   （10） 调入退（-21） 收料退（-11）预点（30）"),s("br"),t._v("\nstoreRoomName: { type: Sequelize.STRING }, // 成本科目（没用字段）\n通过id获取某一条数据的时候，如果是orgId也是主键的时候必须带上orgId.\n如下面不许用出现这种："),s("br"),t._v("\nservice.get('m-delivery-order/:id', async function (ctx, next) {\nawait mDeliveryService.getMDelivery(ctx, Models)\n})"),s("br"),t._v("\n必须下面这种：\nservice.get('m-delivery-order/:id/:orgid', async function (ctx, next) {\nawait mDeliveryService.getMDelivery(ctx, Models)\n})")])])])}),[],!1,null,null,null);n.default=a.exports}}]);